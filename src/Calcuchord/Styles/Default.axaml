<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=netstandard"
        xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:controls="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
        xmlns:dlg="clr-namespace:DialogHostAvalonia;assembly=DialogHost.Avalonia"
        xmlns:local="clr-namespace:Calcuchord"
        xmlns:common="clr-namespace:MonkeyPaste.Common.Avalonia;assembly=MonkeyPaste.Common.Avalonia">
    <Styles.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <MergeResourceInclude Source="avares://Calcuchord/Styles/Dictionaries/Fonts.axaml" />
                <MergeResourceInclude Source="avares://Calcuchord/Styles/Themes/Snackbar/TinySnackbarHost.axaml" />
                <MergeResourceInclude Source="avares://Calcuchord/Styles/Themes/MaterialButtonlikeToggleButton.axaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Styles.Resources>

    <!-- TOOLTIPS -->
    <Style Selector=":is(ToolTip)">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
    </Style>
    <Style Selector=":is(ToolTip) controls|ColorZone">
        <Setter Property="Mode"
                Value="Accent" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="CornerRadius"
                Value="7" />
    </Style>

    <!-- FONTS -->
    <Style Selector=":is(TextBlock)">
        <Setter Property="FontFamily"
                Value="{StaticResource GaramondFont}" />
    </Style>
    <Style Selector="TextBlock.bold">
        <Setter Property="FontFamily"
                Value="{StaticResource GaramondBoldFont}" />
    </Style>

    <Style Selector="Run[FontWeight=Bold]">
        <Setter Property="FontFamily"
                Value="{StaticResource GaramondBoldFont}" />
    </Style>
    <Style Selector="Run.bold">
        <Setter Property="FontFamily"
                Value="{StaticResource GaramondBoldFont}" />
    </Style>
    <Style Selector=":is(TextBox)">
        <Setter Property="FontFamily"
                Value="{StaticResource GaramondFont}" />
    </Style>

    <!-- ICONS -->
    <Style Selector="avalonia|MaterialIcon">
        <Setter Property="Width"
                Value="{x:Static sys:Double.NaN}" />
        <Setter Property="Height"
                Value="{x:Static sys:Double.NaN}" />
    </Style>

    <!-- TEXT -->

    <Style Selector="TextBlock.subject">
        <Setter Property="Foreground"
                Value="{DynamicResource MaterialPrimaryMidBrush}" />
    </Style>

    <Style Selector="Run.subject">
        <Setter Property="Foreground"
                Value="{DynamicResource MaterialPrimaryMidBrush}" />
    </Style>

    <Style Selector="TextBlock.article">
        <Setter Property="Foreground"
                Value="{DynamicResource MaterialSecondaryMidBrush}" />
    </Style>

    <Style Selector="Run.article">
        <Setter Property="Foreground"
                Value="{DynamicResource MaterialSecondaryMidBrush}" />
    </Style>

    <!-- BUTTONS -->

    <Style Selector="Button.float">
        <Setter Property="Theme"
                Value="{StaticResource MaterialFlatButton}" />
    </Style>
    <Style Selector="ToggleButton.float">
        <Setter Property="Theme"
                Value="{StaticResource MaterialFlatToggleButton}" />
    </Style>

    <Style Selector=":is(Button).float">
        <Setter Property="Width"
                Value="32" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="Padding"
                Value="4" />
    </Style>

    <Style Selector=":is(Button).float-text">
        <Setter Property="Foreground"
                Value="{DynamicResource Bg}" />
    </Style>
    <Style Selector=":is(Button).float-text TextBlock">
        <Setter Property="Foreground"
                Value="{DynamicResource Bg}" />
    </Style>
    <Style Selector="controls|Card ToggleButton">
        <Setter Property="Theme"
                Value="{StaticResource MaterialButtonlikeToggleButton}" />
    </Style>

    <Style Selector="controls|Card RadioButton">
        <Setter Property="Theme"
                Value="{StaticResource MaterialButtonlikeRadioButton}" />
    </Style>

    <!-- TEXTBOX -->
    <Style Selector=":is(TextBox) /template/ Panel#PART_TextContainer">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <!-- TRANSITIONS -->
    <Style Selector=":is(Control).fade">
        <Setter Property="Transitions">
            <Setter.Value>
                <Transitions>
                    <DoubleTransition Property="Opacity"
                                      Duration="0:0:0.125" />
                </Transitions>

            </Setter.Value>
        </Setter>
    </Style>

    <Style Selector=":is(Control).fade.fade-collapse[Opacity=0]">
        <Setter Property="IsVisible"
                Value="False" />
    </Style>

    <!-- HYPERLINK -->
    <Style Selector="Button.link">
        <Setter Property="Foreground"
                Value="Blue" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="{DynamicResource HttTransparent}" />
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter Content="{TemplateBinding Content}">
                    <ContentPresenter.Styles>
                        <Style Selector="TextBlock">
                            <Setter Property="Foreground"
                                    Value="{TemplateBinding Foreground}" />
                            <Setter Property="FontSize"
                                    Value="{TemplateBinding FontSize}" />
                            <Setter Property="TextDecorations"
                                    Value="Underline" />
                        </Style>
                    </ContentPresenter.Styles>
                </ContentPresenter>
            </ControlTemplate>
        </Setter>
    </Style>

    <!-- BUTTON GROUP -->
    <Style Selector="controls|Card.button-group">
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="InsideClipping"
                Value="True" />
    </Style>

    <!-- BUSY -->
    <Style Selector="Border.busy-cntr">
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Black"
                                 Opacity="0.5" />

            </Setter.Value>
        </Setter>
        <Setter Property="Child">
            <Setter.Value>
                <!-- ReSharper disable once Xaml.InvalidType -->
                <Template>
                    <controls:Card CornerRadius="24"
                                   Padding="4"
                                   Margin="4"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center">
                        <ProgressBar Classes="circular"
                                     IsIndeterminate="True" />
                    </controls:Card>
                    <!-- ReSharper disable once Xaml.InvalidType -->
                </Template>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ORIENTATION -->
    <Style Selector="Grid.oriented">
        <Setter Property="common:MpAvOrientedGridExtension.IsEnabled"
                Value="True" />
        <Setter Property="common:MpAvOrientedGridExtension.Orientation"
                Value="{Binding Orientation, Source={x:Static local:ThemeViewModel.Instance}}" />
    </Style>


    <!-- DIALOGS -->

    <Style Selector="controls|ColorZone.popup-cntr">
        <Setter Property="Mode"
                Value="Accent" />
        <Setter Property="CornerRadius"
                Value="10" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="20" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Bg}" />
        <Setter Property="Foreground"
                Value="{DynamicResource Bg}" />
        <Setter Property="BorderThickness"
                Value="5" />
        <Setter Property="Padding"
                Value="10" />
    </Style>

    <Style Selector="controls|ColorZone.popup-cntr">
        <Setter Property="Mode"
                Value="Accent" />
        <Setter Property="CornerRadius"
                Value="10" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="20" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Bg}" />
        <Setter Property="Foreground"
                Value="{DynamicResource Bg}" />
        <Setter Property="BorderThickness"
                Value="5" />
        <Setter Property="Padding"
                Value="10" />
    </Style>


</Styles>