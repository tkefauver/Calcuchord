<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignWidth="360"
             d:DesignHeight="720"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:controls="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
             xmlns:dlg="clr-namespace:DialogHostAvalonia;assembly=DialogHost.Avalonia"
             xmlns:local="clr-namespace:Calcuchord"
             xmlns:common="clr-namespace:MonkeyPaste.Common.Avalonia;assembly=MonkeyPaste.Common.Avalonia"
             Classes.dark="{Binding IsDark, Source={x:Static local:ThemeViewModel.Instance}}"
             x:DataType="local:MainViewModel"
             x:Class="Calcuchord.MainView">
    <Design.DataContext>
        <local:DesignMainViewModel />
    </Design.DataContext>

    <UserControl.Styles>

        <!-- SNACKBAR TOAST -->
        <Style Selector="controls|SnackbarHost /template/ controls|Card">
            <Setter Property="CornerRadius"
                    Value="7" />
            <Setter Property="MinWidth"
                    Value="0" />
        </Style>

        <!-- RIGHT-DRAWER MODALITY -->
        <Style Selector="controls|NavigationDrawer">
            <Setter Property="RightDrawerExpandThresholdWidth"
                    Value="{x:Null}" />
        </Style>
        <Style Selector="controls|NavigationDrawer.is-right-modal">
            <Setter Property="RightDrawerExpandThresholdWidth"
                    Value="0" />
        </Style>
    </UserControl.Styles>
    <Grid x:Name="MainOuterContainer">
        <dlg:DialogHost x:Name="DlgHost"
                        BlurBackground="True"
                        dlg:DialogHostStyle.ClipToBounds="True"
                        Identifier="{Binding MainDialogHostName}">
            <dlg:DialogHost.Resources>
                <SolidColorBrush x:Key="DialogHostOverlayBackgroundMixinBrush">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="DialogHostBackgroundMixinBrush">Transparent</SolidColorBrush>
            </dlg:DialogHost.Resources>
            <controls:SnackbarHost HostName="{x:Static local:MainView.SnackbarHostName}"
                                   Theme="{StaticResource TinySnackbarHost}"
                                   SnackbarHorizontalAlignment="Center"
                                   SnackbarVerticalAlignment="Top">
                <controls:NavigationDrawer x:Name="MainNavDrawer"
                                           LeftDrawerOpened="{Binding IsLeftDrawerOpen, Mode=TwoWay}"
                                           RightDrawerOpened="{Binding IsRightDrawerOpen, Mode=TwoWay}"
                                           Classes="permanent">
                    <Classes.is-right-modal>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <!-- when window is significantly wider than right drawer, right drawer is NOT modal -->
                            <local:MathBinding IsBoolResult="True"
                                               a="{Binding $parent[local:MainView].Bounds.Width}"
                                               exp="IF(380-a>0,0,1)" />
                            <Binding ElementName="MainNavDrawer"
                                     Path="RightDrawerOpened" />
                        </MultiBinding>
                    </Classes.is-right-modal>
                    <controls:NavigationDrawer.LeftDrawerContent>
                        <local:LeftDrawerView x:Name="LeftDrawerView" />
                    </controls:NavigationDrawer.LeftDrawerContent>
                    <controls:NavigationDrawer.RightDrawerContent>
                        <local:RightDrawerView x:Name="RightDrawerView" />
                    </controls:NavigationDrawer.RightDrawerContent>
                    <DockPanel LastChildFill="true">
                        <!-- HEADER MENU -->
                        <local:MainHeaderView x:Name="HeaderView"
                                              IsEnabled="{Binding !IsOpen, ElementName=DlgHost}"
                                              DockPanel.Dock="Top" />
                        <local:MainFooterView x:Name="FooterView"
                                              DockPanel.Dock="Bottom" />

                        <Grid x:Name="MainContainerGrid"
                              RowDefinitions="Auto,Auto,*"
                              Classes.dark="{Binding IsDark, Source={x:Static local:ThemeViewModel.Instance}, FallbackValue=False, TargetNullValue=False}"
                              Classes.landscape="{Binding IsLandscape, Source={x:Static local:ThemeViewModel.Instance}}">
                            <!-- BG IMAGE -->
                            <Image x:Name="MainBgImage"
                                   Grid.RowSpan="3"
                                   Source="/Assets/Images/parchment.jpg"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Opacity="0.5"
                                   Stretch="None" />

                            <!-- INSTRUMENT VIEW -->
                            <local:InstrumentView x:Name="InstrumentView"
                                                  IsVisible="{Binding IsInstrumentVisible, Source={x:Static local:MainViewModel.Instance}}"
                                                  DataContext="{Binding SelectedInstrument}" />

                            <!-- MATCHES VIEW -->

                            <local:MatchesView x:Name="MatchesView"
                                               Grid.Row="2" />

                            <!-- SPLITTER -->
                            <GridSplitter x:Name="MainSplitter"
                                          Grid.Row="1"
                                          IsVisible="False"
                                          Background="Orange" />
                        </Grid>
                    </DockPanel>
                </controls:NavigationDrawer>
            </controls:SnackbarHost>
        </dlg:DialogHost>

        <Border x:Name="MainContainerBusyOverlay"
                Classes="busy-cntr">
            <Border.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">
                    <Binding Path="IsBusy" />
                </MultiBinding>
            </Border.IsVisible>

            <TextBlock IsVisible="{Binding !BusyText, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                       Text="{Binding BusyText}"
                       TextAlignment="Center"
                       HorizontalAlignment="Stretch"
                       RenderTransform="translate(0,100px)"
                       VerticalAlignment="Center" />
        </Border>

    </Grid>
</UserControl>